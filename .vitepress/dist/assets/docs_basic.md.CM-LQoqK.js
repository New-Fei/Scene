import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.BgId8OS5.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/basic.md","filePath":"docs/basic.md"}'),e={name:"docs/basic.md"};function t(p,s,h,k,o,r){return n(),a("div",null,s[0]||(s[0]=[l(`<h2 id="调用" tabindex="-1">调用 <a class="header-anchor" href="#调用" aria-label="Permalink to &quot;调用&quot;">​</a></h2><ul><li>Scene的性能调节配置并未采用完全固定的格式</li><li>而是以*调用(call)*为核心构成各个场景的设定</li><li>配置的作用就是声明各个场景，要调用Scene提供的哪些函数，将参数改成什么样</li></ul><h3 id="写入数值" tabindex="-1">写入数值 <a class="header-anchor" href="#写入数值" aria-label="Permalink to &quot;写入数值&quot;">​</a></h3><ul><li><p>例如，使用<code>@set_value</code>函数可以向指定路径写入值</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 示例</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@set_value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/proc/sys/kernel/sched_boost&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @set_value较为特殊，Scene建议省略函数名直接写path和value</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/proc/sys/kernel/sched_boost&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div></li><li><p>如果需要再写入数值后，将文件设为只读(0444)，可以在value前加#</p><blockquote><p>这么做主要是防止第三方应用或系统再覆盖写入的数值，并不影响Scene下次写入该文件</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/proc/sys/kernel/sched_boost&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div></li></ul><h3 id="其它函数" tabindex="-1">其它函数 <a class="header-anchor" href="#其它函数" aria-label="Permalink to &quot;其它函数&quot;">​</a></h3><ul><li>Scene内置了一些常用的频率调节函数</li><li>这些函数对(Qualcomm|MediaTek)设备做了兼容适配</li><li>让使用者无需考虑具体需要向什么路径写入参数才能完成性能调节</li><li>如果你非常了解各个平台的差异，直接写路径会比调用这些函数更高效</li></ul><h4 id="cpu频率范围-cpu-freq" tabindex="-1">CPU频率范围 <strong><code>@cpu_freq</code></strong> <a class="header-anchor" href="#cpu频率范围-cpu-freq" aria-label="Permalink to &quot;CPU频率范围 **\`@cpu_freq\`**&quot;">​</a></h4><ul><li>参数格式为 <strong>@cpu_freq [clusterExpr] [freqExpr] [freqExpr]</strong></li><li>例如，我准备在省电模式下将CPU小核限制为最高900Mhz</li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;schemes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;powersave&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;call&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@cpu_freq&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cpu0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;min&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;900MHz&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="cpu最小频率-cpu-freq-min" tabindex="-1">CPU最小频率 <strong><code>@cpu_freq_min</code></strong> <a class="header-anchor" href="#cpu最小频率-cpu-freq-min" aria-label="Permalink to &quot;CPU最小频率 **\`@cpu_freq_min\`**&quot;">​</a></h3><ul><li>参数格式为 <strong>@cpu_freq_min [clusterExpr] [freqExpr]</strong></li><li>例如，我准备在省电模式下将CPU小核限制为最低300Mhz</li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;schemes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;powersave&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;call&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@cpu_freq_min&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cpu0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;300MHz&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="cpu最大频率-cpu-freq-max" tabindex="-1">CPU最大频率 <strong><code>@cpu_freq_max</code></strong> <a class="header-anchor" href="#cpu最大频率-cpu-freq-max" aria-label="Permalink to &quot;CPU最大频率 **\`@cpu_freq_max\`**&quot;">​</a></h4><ul><li>参数格式为 <strong>@cpu_freq_max [clusterExpr] [freqExpr]</strong></li><li>例如，我准备在省电模式下将CPU小核限制为最高900Mhz</li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;schemes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;powersave&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;call&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@cpu_freq_max&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cpu0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;900MHz&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="gpu频率范围-gpu-freq" tabindex="-1">GPU频率范围 <code>@gpu_freq</code> <a class="header-anchor" href="#gpu频率范围-gpu-freq" aria-label="Permalink to &quot;GPU频率范围 \`@gpu_freq\`&quot;">​</a></h4><ul><li>参数格式为 <strong>@gpu_freq [freqExpr] [freqExpr]</strong></li><li>例如，我准备在省电模式下将CPU小核限制为最高500Mhz</li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;schemes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;powersave&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;call&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@gpu_freq&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;min&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;500MHz&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="gpu最小频率-gpu-freq-min" tabindex="-1">GPU最小频率 <strong><code>@gpu_freq_min</code></strong> <a class="header-anchor" href="#gpu最小频率-gpu-freq-min" aria-label="Permalink to &quot;GPU最小频率 **\`@gpu_freq_min\`**&quot;">​</a></h4><ul><li>参数格式为 <strong>@gpu_freq_min [freqExpr]</strong></li><li>例如，我准备在极速模式下将GPU最低频率限制为400Mhz</li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;schemes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;fast&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;call&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@gpu_freq_min&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;400MHz&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="gpu最大频率-gpu-freq-max" tabindex="-1">GPU最大频率 <strong><code>@gpu_freq_max</code></strong> <a class="header-anchor" href="#gpu最大频率-gpu-freq-max" aria-label="Permalink to &quot;GPU最大频率 **\`@gpu_freq_max\`**&quot;">​</a></h4><ul><li>参数格式为 <strong>@gpu_freq_max [freqExpr]</strong></li><li>例如，我准备在省电模式下将GPU最膏限制为最高300Mhz</li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;schemes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;powersave&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;call&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@gpu_freq_max&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;400MHz&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-label="Permalink to &quot;补充说明&quot;">​</a></h4><ul><li><p>频率范围冲突</p><blockquote><p>假设，CPU0此时已经被限制为 [600Mhz ~ 1.2Ghz]<br> 我们调用 <strong><code>@cpu_freq_min</code> cpu0 1.5Ghz</strong> 必然不会成功<br> 因为 1.5Ghz 不符合 [600Mhz ~ 1.2Ghz]这个区间<br> 建议使用 <strong><code>@cpu_freq</code> cpu0 1.5Ghz 2.0Ghz</strong> 直接指定CPU频率范围</p></blockquote></li><li><p>clusterExpr说明</p><blockquote><p>我们修改CPU频率通常是以核心集群(Cluster)为单位进行的<br> 例如，4+3+1的骁龙处理器，小、中、大核可以用以下几种格式来表示<br><code>cpu0</code>、<code>cpu4</code>、<code>cpu7</code><br><code>policy0</code>、<code>policy4</code>、<code>policy7</code><br><code>cluster0</code>、<code>cluster1</code>、<code>cluster2</code><br> 但是，千万不要用意义不明的数字来表示，例如 <code>0</code>、<code>4</code>、<code>7</code>，这是非常不利于理解</p></blockquote></li><li><p>freqExpr说明</p><blockquote><p>为了更方便的表示频率，Scene内置了多种格式兼容和特殊值<br> 例：<code>min</code>、<code>max</code> 分别表示该核心(Cluster)支持的最小、最大频率<br> 例：<code>1800Mhz</code>、<code>1.8Ghz</code> 均等同于 <code>1800000Khz</code> 或 直接写 <code>1800000</code><br> 如果你指定了一个不存在的频率，那么Scene会帮你选择低于指定频率的最大频率<br> 又或者，指定的频率比核心支持的最高频率还要高，那么Scene会帮你选择支持的最高频率<br> 又或者，指定的频率比核心支持的最低频率还低，那么Scene会帮你选择支持的最低频率<br></p></blockquote><blockquote><p>但是，小心！用<code>GHz|MHz</code>表示频率虽然非常方便，但你可能会掉进陷阱<br> 因为CPU的频率经常不是 2.8Ghz(2800000Khz) 这样整齐的数字，更多是 2841600Khz这样<br> 如果你写2.8Ghz，是不会匹配到2841600Khz这个频率的！<br></p></blockquote><blockquote><p>负值频率<br> 这是Scene定义的一种表示频率的方式，它是指在 <code>max</code> 的基础上减去一个频率<br> 例如 <code>-300Mhz</code>、<code>-0.3Ghz</code>、<code>-300000</code><br> 如果，小核最高频率为<code>1800Mhz</code><br> 那么 <strong><code>@cpu_freq</code> cpu0 -1200Mhz -300Mhz</strong> 相当于 <strong><code>@cpu_freq</code> cpu0 600Mhz 1500Mhz</strong><br> 如果，小核最高频率为<code>2000Mhz</code><br> 那么 <strong><code>@cpu_freq</code> cpu0 -1200Mhz -300Mhz</strong> 相当于 <strong><code>@cpu_freq</code> cpu0 800Mhz 1700Mhz</strong></p></blockquote></li></ul>`,26)]))}const d=i(e,[["render",t]]);export{c as __pageData,d as default};
