import{_ as e,c as l,o as s,ag as i}from"./chunks/framework.BgId8OS5.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/fas.md","filePath":"docs/fas.md"}'),a={name:"docs/fas.md"};function n(d,t,r,o,g,h){return s(),l("div",null,t[0]||(t[0]=[i(`<h3 id="scene-fas" tabindex="-1">Scene FAS <a class="header-anchor" href="#scene-fas" aria-label="Permalink to &quot;Scene FAS&quot;">​</a></h3><ul><li><p>FAS是根据帧间隔(时间)和帧率的性能调节实现(仅适用于游戏)</p></li><li><p>在王者荣耀、和平精英等Unity引擎实现的游戏中能有效降低能耗</p></li><li><p>配置示例</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;friendly&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;和平精英&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;packages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.tencent.tmgp.pubgmhd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;modes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;mode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;powersave&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;fas&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;freq&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1900000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1900000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;mode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;balance&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;fas&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;freq&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2100000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2100000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><h3 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h3><ul><li>其原理简单来说就是：游戏出现丢帧，提高频率。游戏过于流畅，降低频率</li><li>由于FAS本身并不计算CPU负载，无法知晓各cluster的实际工作状态</li><li>因此通常会采用大核中核同频，或保持某种规律同升同降</li><li>也就是说<strong>大核中核同频或同升同降</strong>只是FAS的<strong>副作用</strong></li><li>并且，Scene提供了一些额外设定来缓解该副作用</li><li>因此，“通过FAS的副作用判断FAS是否生效”是不合理的做法</li><li><strong>FAS并不总是能起正面作用，除非使用FAS以后出现以下表现</strong>： <ol><li>CPU频率整体下降 <br></li><li>CPU平均利用率提高 <br></li><li>帧率没有明显损失 <br></li><li>功耗有明显降低 <br></li></ol></li></ul><h3 id="基本参数" tabindex="-1">基本参数 <a class="header-anchor" href="#基本参数" aria-label="Permalink to &quot;基本参数&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th><th style="text-align:right;">类型</th></tr></thead><tbody><tr><td style="text-align:left;">governor</td><td style="text-align:left;">与FAS配合使用的CPU调速器，walt、schedutil等</td><td style="text-align:right;">string</td></tr><tr><td style="text-align:left;">mode</td><td style="text-align:left;">激进级别，可配置值见下文</td><td style="text-align:right;">string</td></tr><tr><td style="text-align:left;">freq</td><td style="text-align:left;">默认的频率上限</td><td style="text-align:right;">[String, String, String]</td></tr><tr><td style="text-align:left;">_60</td><td style="text-align:left;">60帧下的频率上限</td><td style="text-align:right;">[String, String, String]</td></tr><tr><td style="text-align:left;">_90</td><td style="text-align:left;">90帧下的频率上限</td><td style="text-align:right;">[String, String, String]</td></tr><tr><td style="text-align:left;">_120</td><td style="text-align:left;">120帧下的频率上限</td><td style="text-align:right;">[String, String, String]</td></tr><tr><td style="text-align:left;">_144</td><td style="text-align:left;">144帧下的频率上限</td><td style="text-align:right;">[String, String, String]</td></tr><tr><td style="text-align:left;">limiters</td><td style="text-align:left;">FAS不适用时的替代辅助调速器</td><td style="text-align:right;">[String, ...]</td></tr></tbody></table><blockquote><p><strong>governor</strong>: 有时，FAS配合performance调速器使用效果更佳</p></blockquote><blockquote><p><strong>mode</strong>: 默认会根据性能档位匹配不同的值，对应关系为：<br></p></blockquote><table tabindex="0"><thead><tr><th style="text-align:center;"></th><th style="text-align:center;"></th></tr></thead><tbody><tr><td style="text-align:center;">powersave</td><td style="text-align:center;">energy</td></tr><tr><td style="text-align:center;">balance</td><td style="text-align:center;">normal</td></tr><tr><td style="text-align:center;">performance</td><td style="text-align:center;">fps</td></tr><tr><td style="text-align:center;">fast</td><td style="text-align:center;">fps</td></tr><tr><td style="text-align:center;">pedestal</td><td style="text-align:center;">boost</td></tr></tbody></table><blockquote><p>_60/_90/... : 参数为 [BigMaxFreq, MiddleMaxFreq, MiddleOffset]，FAS默认采取大核中核同频策略，但有些时候大核中核所需的性能并不相同，同频策略会造成一些浪费。而MiddleOffset的作用就是，设定中核应该比大核的频率低(或高)多少个个级别</p></blockquote><blockquote><p>limiters: 它是个容错配置，如果系统不兼容FAS或用户手动对该应用关闭了FAS，那么limiters指定的限速器就会被启用</p></blockquote><ul><li><p>mode 可选值</p><table tabindex="0"><thead><tr><th style="text-align:left;">值</th><th style="text-align:left;">释义</th></tr></thead><tbody><tr><td style="text-align:left;">energy</td><td style="text-align:left;">省电优先，允许更多卡顿</td></tr><tr><td style="text-align:left;">normal</td><td style="text-align:left;">默认模式，能耗和帧率平衡</td></tr><tr><td style="text-align:left;">fps</td><td style="text-align:left;">帧率优先，更少的丢帧</td></tr><tr><td style="text-align:left;">boost</td><td style="text-align:left;">帧率优先，更少丢帧，降频更缓慢</td></tr><tr><td style="text-align:left;">feas</td><td style="text-align:left;">如果FEAS可用则使用FEAS，否则使用FAS</td></tr><tr><td style="text-align:left;">feas-only</td><td style="text-align:left;">如果FEAS可用则使用FEAS，否则关闭FAS</td></tr><tr><td style="text-align:left;">off</td><td style="text-align:left;">对此应用的此模式禁用FAS</td></tr></tbody></table></li></ul><h3 id="进阶的参数" tabindex="-1">进阶的参数 <a class="header-anchor" href="#进阶的参数" aria-label="Permalink to &quot;进阶的参数&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th><th style="text-align:right;">类型</th></tr></thead><tbody><tr><td style="text-align:left;">big_min_freq</td><td style="text-align:left;">大核频率下限</td><td style="text-align:right;">int</td></tr><tr><td style="text-align:left;">middle_min_freq</td><td style="text-align:left;">中核频率下限</td><td style="text-align:right;">int</td></tr><tr><td style="text-align:left;">fast_down_rate</td><td style="text-align:left;">高频快速下调频率的速率</td><td style="text-align:right;">float</td></tr><tr><td style="text-align:left;">slow_down_rate</td><td style="text-align:left;">低频慢速下调频率的速率</td><td style="text-align:right;">float</td></tr><tr><td style="text-align:left;">lower_freq</td><td style="text-align:left;">较低频率</td><td style="text-align:right;">int</td></tr><tr><td style="text-align:left;">max_level</td><td style="text-align:left;">最大帧率级别，如 <code>60</code> <code>90</code> <code>120</code></td><td style="text-align:right;">int</td></tr><tr><td style="text-align:left;">min_level</td><td style="text-align:left;">最小帧率级别，如 <code>60</code> <code>90</code> <code>120</code></td><td style="text-align:right;">int</td></tr><tr><td style="text-align:left;">middle_optimum_freq</td><td style="text-align:left;">中核最佳频率</td><td style="text-align:right;">int</td></tr></tbody></table><ul><li><p>进阶的(已在Scene8FAS中废弃的参数)</p><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th><th style="text-align:right;">类型</th></tr></thead><tbody><tr><td style="text-align:left;">recent_frames</td><td style="text-align:left;">用于计算平均“帧耗时”的帧数</td><td style="text-align:right;">int</td></tr><tr><td style="text-align:left;">thread_analyzer</td><td style="text-align:left;">线程分析，根据线程负载调整中核与大核的频率差</td><td style="text-align:right;">int</td></tr><tr><td style="text-align:left;">perfect_load</td><td style="text-align:left;">完美负载0~100</td><td style="text-align:right;">float</td></tr></tbody></table></li></ul><blockquote><p><strong>big_min_freq</strong>, <strong>middle_min_freq</strong>: 大核、中核频率下限。适当提高频率下限有助于减少频率和帧率波动，用极少的功耗换更平稳的帧率</p></blockquote><blockquote><p><strong>fast_down_rate</strong>: 处于较高频率时的降频速率，默认为 <code>5 ~ 8</code> (取决于<code>mode</code>)。假设目标帧率为120，fast_down_rate为5，则需连续24帧(120/5)没有超时才降频</p></blockquote><blockquote><p><strong>slow_down_rate</strong>: 处于<code>较低频率</code>时的降频速率，默认为 <code>2 ~ 4</code> (取决于<code>mode</code>)。假如游戏目标帧率为120，slow_down_rate为2，则需连续60帧(120/2)没有超时才降频</p></blockquote><blockquote><p><strong>lower_freq</strong>: 处理器频率不高于此值时，[slow_down_rate] 生效，如果未指定该值则由SCENE自动计算。</p></blockquote><blockquote><p><strong>middle_optimum_freq</strong>: FAS默认会使中核大核保持频率相近，尽管有MiddleOffset可以使中核比大核频率低一些，但这又会使得大核频率较低时中核频率更低导致卡顿。 middle_optimum_freq 则是以另一种形式解决中核大核同频。在中核频率低于middle_optimum_freq时，中核跟随大核一起升频，中核频率达到middle_optimum_freq之后不再继续跟随大核升频。直到大核频率到达上限，或者与中核频率相差超过5级，中核才允许继续升频</p></blockquote><blockquote><p><strong>max_level</strong>, <strong>min_level</strong>: FAS的最大、最小目标帧率。FAS会自动根据游戏实际帧率，计算<code>目标帧率</code>并匹配设定的频率上限。如果没有利用FAS限制帧率的需求，不需要配置这两个参数</p></blockquote><blockquote><p><strong>recent_frames</strong>: FAS会根据临近几帧的平均[间隔时长]来判断游戏卡顿情况，默认为<code>6~8</code>帧。主要影响对卡顿的敏感程度，数值过大会迟钝，数值过小则会过激，值在<code>6 ~ 12</code>之间最佳</p></blockquote><blockquote><p><strong>thread_analyzer</strong> 设为true时，FAS将根据线程负载决定中核频率，而不是让中核与大核同步升降频率。启用该特性时MiddleOffset失效。</p></blockquote><blockquote><p><strong>perfect_load</strong> 可设置为0.5~1.0之间的值(表示50%~100%)。负载高于此值时不允许继续降低频率，如果此时需要提升频率，至少会提升至平均频率。</p></blockquote>`,24)]))}const y=e(a,[["render",n]]);export{k as __pageData,y as default};
