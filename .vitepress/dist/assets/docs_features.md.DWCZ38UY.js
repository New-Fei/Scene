import{_ as a,c as i,o as n,ag as t}from"./chunks/framework.BgId8OS5.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/features.md","filePath":"docs/features.md"}'),l={name:"docs/features.md"};function p(e,s,h,k,o,r){return n(),i("div",null,s[0]||(s[0]=[t(`<h3 id="刷新率管理" tabindex="-1">刷新率管理 <a class="header-anchor" href="#刷新率管理" aria-label="Permalink to &quot;刷新率管理&quot;">​</a></h3><ul><li>此特性由用户在SCENE通过GUI进行配置，无需在方案配置中做任何预设</li></ul><h3 id="核心分配" tabindex="-1">核心分配 <a class="header-anchor" href="#核心分配" aria-label="Permalink to &quot;核心分配&quot;">​</a></h3><blockquote><p>过去，我们发现很多设备不喜欢使用CPU7，导致游戏性能下降或功耗增加<br> 经人工测试并预先配置线程放置，效果很好，但这耗费的时间和精力太多了<br> 核心分配同时支持人工配置(threads.json)，和程序自动按线程负载分配处理器核心<br> Scene允许用户禁用此功能，禁用后threads.json和和程序自动分配均不再生效</p></blockquote><h3 id="旁路供电" tabindex="-1">旁路供电 <a class="header-anchor" href="#旁路供电" aria-label="Permalink to &quot;旁路供电&quot;">​</a></h3><blockquote><p>游戏玩家们经常忘记充电或插上充电器玩，过快的充电速度产生导致设备升温变得卡顿<br> Scene在性能调节框架中集成了[旁路供电]，用户可以通过GUI设置开启<br> 通常，无需在profile.json里做配置。如果你有自己的想法，<br> 也可以通过<code>suspend</code>和<code>normal</code>来指定<code>进入</code>和<code>退出</code>[旁路供电]时额外执行的修改<br> 例如</p></blockquote><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;features&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;charge_control&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;suspend&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/sys/class/power_supply/battery/charge_control_limit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;15&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/sys/class/power_supply/battery/night_charging&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;normal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/sys/class/power_supply/battery/charge_control_limit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/sys/class/power_supply/battery/night_charging&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="手势boost" tabindex="-1">手势BOOST <a class="header-anchor" href="#手势boost" aria-label="Permalink to &quot;手势BOOST&quot;">​</a></h3><ul><li>手势主要是指从屏幕四个边缘，向屏幕中心进行的长距离滑动操作</li><li>在手机上实现精致的120FPS过场动画，几乎需要和耗尽处理器全部性能</li><li>如果我们为了省电，把处理器余量调的很小或频率调的很低，就容易发生卡顿</li><li>利用手势BOOST，可以实现短时间的性能大幅提升，避免过场动画卡顿</li><li>例如</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>    &quot;features&quot;: {</span></span>
<span class="line"><span>        &quot;gesture_boost&quot;: {</span></span>
<span class="line"><span>            &quot;enter&quot;: [</span></span>
<span class="line"><span>                [&quot;/sys/kernel/ged/hal/custom_boost_gpu_freq&quot;, &quot;24&quot;],</span></span>
<span class="line"><span>                [&quot;/sys/class/devfreq/mtk-dvfsrc-devfreq/userspace/set_freq&quot;, &quot;4266000000&quot;]</span></span>
<span class="line"><span>            ],</span></span>
<span class="line"><span>            &quot;exit&quot;: [</span></span>
<span class="line"><span>                [&quot;/sys/kernel/ged/hal/custom_boost_gpu_freq&quot;, &quot;99&quot;],</span></span>
<span class="line"><span>                [&quot;/sys/class/devfreq/mtk-dvfsrc-devfreq/userspace/set_freq&quot;, &quot;#0&quot;]</span></span>
<span class="line"><span>            ]</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><blockquote><p>调度矛盾</p></blockquote><ul><li>遗憾的是，在触发手势的同时，其它性能调节策略仍然处于运行状态</li><li>因此手势BOOST不可避免的会与之产生矛盾，这会让BOOST的效果变差</li><li>临时性的解决办法是在手势BOOST中，采用优先级更高的修改方式(当然，并不建议这么做)</li><li>例如</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">高通可以用msm_performance</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/sys/module/msm_performance/parameters/cpu_min_freq&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0:1400000 4:1800000 7:2000000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/sys/kernel/msm_performance/parameters/cpu_min_freq&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0:1400000 4:1800000 7:2000000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">新款天玑</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">9000等)可以用</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/proc/cpudvfs/cpufreq_debug&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0 1400000 2000000 |4 1800000 2850000|7 2000000 3050000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><blockquote><p>无需担忧的情形</p></blockquote><ul><li>SCENE的辅助调速器已针对手势Boost做出优化，也就是用户触发手势时，Scene会自行临时提高余量以确保动画流畅运行</li></ul>`,15)]))}const c=a(l,[["render",p]]);export{d as __pageData,c as default};
